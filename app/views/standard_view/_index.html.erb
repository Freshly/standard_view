<% has_parent = local_assigns[:parent].present? %>
<% uses_filter = local_assigns[:filter_by].present? %>
<% has_filter_default = local_assigns[:filter_default].present? %>
<% content_for(:title) { title_for_collection(collection) } %>
<% cache [ collection, current_page, params[:filter], params[:all] ] do %>
  <%= content_tag :main, id: "#{collection.model.model_name.collection}-index", class: "container" do %>
    <header>
      <%= render "breadcrumbs", model: parent, label: title_for_collection(collection) if has_parent %>

      <% if action_name == "index" %>
        <% if controller.action_methods.include?("new") && (!controller.respond_to?(:new?) || controller.new?) %>
          <%= link_to t("add_new"), { action: :new }, class: "btn btn-primary btn-lg float-right" %>
        <% end %>
      <% end %>

      <%= content_tag(:h5, class: "text-muted") { heading_for_model(parent) } if has_parent %>

      <h1 class="mb-3"><%= has_parent ? parent.presenter.header_title : title_for_collection(collection) %></h1>

      <%= render "navigation/tabs" if content_for?(:navigation_tabs) %>
    </header>

    <%= content_tag(:hr) unless content_for?(:navigation_tabs) %>

    <% unless content_for?(:page_content) %>
      <% content_for(:page_content) do %>
        <% if content_for?(:subnav_content) || uses_filter %>
          <%= content_for(:subnav_content) if content_for?(:subnav_content) %>

          <% if uses_filter %>
            <%= render "filter", field: filter_by, default: local_assigns[:filter_default], model: collection.model %>
          <% end %>
          <hr>
        <% end %>

        <div class="row">
          <div class="col-12">
            <% filtered_collection = collection %>
            <% if uses_filter %>
              <% if params[:filter].present? %>
                <% filtered_collection = filtered_collection.public_send(params[:filter].to_sym) %>
              <% elsif has_filter_default && !params[:all].present? %>
                <% filtered_collection = filtered_collection.public_send(filter_default) %>
              <% end %>
            <% end %>

            <%= render "paginated_collection",
                       collection: filtered_collection.paginate(page: current_page),
                       is_filtered: uses_filter %>
          </div>
        </div>
      <% end %>
    <% end %>

    <%= render "page_content" %>
  <% end %>
<% end %>
